#server.port = 8082

# H2 Database
#spring.datasource.url=jdbc:mysql://localhost:3306/test?allowPublicKeyRetrieval=true&useSSL=false
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
#spring.jpa.database-platform = org.hibernate.dialect.MySQL8Dialect
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto = none
#spring.jpa.properties.hibernate.auto_quote_keyword = true



# Propertiers for postgres sql

spring.datasource.url=jdbc:postgresql://ec2-54-86-106-48.compute-1.amazonaws.com:5432/d29enm2jmcagkt
spring.datasource.username=oshhfgfilxtrqv
spring.datasource.password=31ade1086aad0be46340d1084be474d394930341a27793ba0b890ce093a08ae4

spring.jpa.database-platform = org.hibernate.dialect.PostgreSQLDialect

#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=create


#spring.datasource.url=jdbc:postgresql://localhost:8088/postgres
#spring.datasource.username=postgres
#spring.datasource.password=root

#spring.jpa.database-platform = org.hibernate.dialect.PostgreSQLDialect

#drop n create table again, good for testing, comment this in production
#spring.jpa.hibernate.ddl-auto=create




spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=215MB

upoadDir=D:\React_Js\react_fronend\imageData



#spring.data.mongodb.host=localhost

#spring.data.mongodb.port=27017
#spring.data.mongodb.database=chetan_mongodb
#spring.main.allow-bean-definition-overriding=true








kafka.bootstrapAddress = localhost:9092
general.topic.group.id = test-consumer-group
user.topic.group.id = test-consumer-group
general.topic.name = java_in_use_topic
user.topic.name = java_in_use_topic


jwt.secret=chetan
